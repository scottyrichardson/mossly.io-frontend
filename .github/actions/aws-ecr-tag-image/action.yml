name: "AWS ECR Tag Image"
description: "Add a new tag to an existing AWS ECR image using Docker CLI"

inputs:
  aws-access-key-id:
    description: "AWS access key ID"
    required: true
  aws-secret-access-key:
    description: "AWS secret access key"
    required: true
  aws-region:
    description: "AWS region"
    required: true
  repository:
    description: "Name of the ECR repository"
    required: true
  source-tag:
    description: "Source image tag"
    required: true
  new-tag:
    description: "New tag to apply"
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Delete tag if it exists
      run: |
        aws ecr batch-delete-image \
          --repository-name ${{ inputs.repository }} \
          --image-ids imageTag=${{ inputs.new-tag }} || true

    - name: Pull source image
      shell: bash
      run: docker pull ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ inputs.source-tag }}

    - name: Tag image
      shell: bash
      run: docker tag ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ inputs.source-tag }} ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ inputs.new-tag }}

    - name: Push new tag
      shell: bash
      run: docker push ${{ steps.login-ecr.outputs.registry }}/${{ inputs.repository }}:${{ inputs.new-tag }}
